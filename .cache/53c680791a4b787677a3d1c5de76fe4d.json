{"dependencies":[{"name":"./observable/empty","loc":{"line":1,"column":22}},{"name":"./observable/of","loc":{"line":2,"column":19}},{"name":"./observable/throwError","loc":{"line":3,"column":27}},{"name":"./util/isFunction","loc":{"line":4,"column":27}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Notification = exports.NotificationKind = undefined;\nexports.observeNotification = observeNotification;\n\nvar _empty = require(\"./observable/empty\");\n\nvar _of = require(\"./observable/of\");\n\nvar _throwError = require(\"./observable/throwError\");\n\nvar _isFunction = require(\"./util/isFunction\");\n\nvar NotificationKind = exports.NotificationKind = undefined;\n(function (NotificationKind) {\n  NotificationKind[\"NEXT\"] = \"N\";\n  NotificationKind[\"ERROR\"] = \"E\";\n  NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (exports.NotificationKind = NotificationKind = {}));\nvar Notification = function () {\n  function Notification(kind, value, error) {\n    this.kind = kind;\n    this.value = value;\n    this.error = error;\n    this.hasValue = kind === 'N';\n  }\n  Notification.prototype.observe = function (observer) {\n    return observeNotification(this, observer);\n  };\n  Notification.prototype.do = function (nextHandler, errorHandler, completeHandler) {\n    var _a = this,\n        kind = _a.kind,\n        value = _a.value,\n        error = _a.error;\n    return kind === 'N' ? nextHandler === null || nextHandler === void 0 ? void 0 : nextHandler(value) : kind === 'E' ? errorHandler === null || errorHandler === void 0 ? void 0 : errorHandler(error) : completeHandler === null || completeHandler === void 0 ? void 0 : completeHandler();\n  };\n  Notification.prototype.accept = function (nextOrObserver, error, complete) {\n    var _a;\n    return (0, _isFunction.isFunction)((_a = nextOrObserver) === null || _a === void 0 ? void 0 : _a.next) ? this.observe(nextOrObserver) : this.do(nextOrObserver, error, complete);\n  };\n  Notification.prototype.toObservable = function () {\n    var _a = this,\n        kind = _a.kind,\n        value = _a.value,\n        error = _a.error;\n    var result = kind === 'N' ? (0, _of.of)(value) : kind === 'E' ? (0, _throwError.throwError)(function () {\n      return error;\n    }) : kind === 'C' ? _empty.EMPTY : 0;\n    if (!result) {\n      throw new TypeError(\"Unexpected notification kind \" + kind);\n    }\n    return result;\n  };\n  Notification.createNext = function (value) {\n    return new Notification('N', value);\n  };\n  Notification.createError = function (err) {\n    return new Notification('E', undefined, err);\n  };\n  Notification.createComplete = function () {\n    return Notification.completeNotification;\n  };\n  Notification.completeNotification = new Notification('C');\n  return Notification;\n}();\nexports.Notification = Notification;\nfunction observeNotification(notification, observer) {\n  var _a, _b, _c;\n  var _d = notification,\n      kind = _d.kind,\n      value = _d.value,\n      error = _d.error;\n  if (typeof kind !== 'string') {\n    throw new TypeError('Invalid notification, missing \"kind\"');\n  }\n  kind === 'N' ? (_a = observer.next) === null || _a === void 0 ? void 0 : _a.call(observer, value) : kind === 'E' ? (_b = observer.error) === null || _b === void 0 ? void 0 : _b.call(observer, error) : (_c = observer.complete) === null || _c === void 0 ? void 0 : _c.call(observer);\n}\n//# sourceMappingURL=Notification.js.map"},"hash":"bf122e4c3eee01e9d4200e5038eb5d35"}