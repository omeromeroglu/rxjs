{"dependencies":[{"name":"../../Observable","loc":{"line":1,"column":27}},{"name":"../../Subscription","loc":{"line":2,"column":29}},{"name":"../../scheduler/performanceTimestampProvider","loc":{"line":3,"column":45}},{"name":"../../scheduler/animationFrameProvider","loc":{"line":4,"column":39}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.animationFrames = animationFrames;\n\nvar _Observable = require(\"../../Observable\");\n\nvar _Subscription = require(\"../../Subscription\");\n\nvar _performanceTimestampProvider = require(\"../../scheduler/performanceTimestampProvider\");\n\nvar _animationFrameProvider = require(\"../../scheduler/animationFrameProvider\");\n\nfunction animationFrames(timestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\nfunction animationFramesFactory(timestampProvider) {\n  var schedule = _animationFrameProvider.animationFrameProvider.schedule;\n  return new _Observable.Observable(function (subscriber) {\n    var subscription = new _Subscription.Subscription();\n    var provider = timestampProvider || _performanceTimestampProvider.performanceTimestampProvider;\n    var start = provider.now();\n    var run = function (timestamp) {\n      var now = provider.now();\n      subscriber.next({\n        timestamp: timestampProvider ? now : timestamp,\n        elapsed: now - start\n      });\n      if (!subscriber.closed) {\n        subscription.add(schedule(run));\n      }\n    };\n    subscription.add(schedule(run));\n    return subscription;\n  });\n}\nvar DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n//# sourceMappingURL=animationFrames.js.map"},"hash":"98bd7b73cce32481e2bd500f00f6d997"}