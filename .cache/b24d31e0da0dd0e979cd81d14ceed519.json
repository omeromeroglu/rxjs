{"dependencies":[{"name":"../Observable","loc":{"line":1,"column":27}},{"name":"../util/argsArgArrayOrObject","loc":{"line":2,"column":37}},{"name":"./from","loc":{"line":3,"column":21}},{"name":"../util/identity","loc":{"line":4,"column":25}},{"name":"../util/mapOneOrManyArgs","loc":{"line":5,"column":33}},{"name":"../util/args","loc":{"line":6,"column":48}},{"name":"../util/createObject","loc":{"line":7,"column":29}},{"name":"../operators/OperatorSubscriber","loc":{"line":8,"column":41}},{"name":"../util/executeSchedule","loc":{"line":9,"column":32}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.combineLatest = combineLatest;\nexports.combineLatestInit = combineLatestInit;\n\nvar _Observable = require(\"../Observable\");\n\nvar _argsArgArrayOrObject = require(\"../util/argsArgArrayOrObject\");\n\nvar _from = require(\"./from\");\n\nvar _identity = require(\"../util/identity\");\n\nvar _mapOneOrManyArgs = require(\"../util/mapOneOrManyArgs\");\n\nvar _args = require(\"../util/args\");\n\nvar _createObject = require(\"../util/createObject\");\n\nvar _OperatorSubscriber = require(\"../operators/OperatorSubscriber\");\n\nvar _executeSchedule = require(\"../util/executeSchedule\");\n\nfunction combineLatest() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  var scheduler = (0, _args.popScheduler)(args);\n  var resultSelector = (0, _args.popResultSelector)(args);\n  var _a = (0, _argsArgArrayOrObject.argsArgArrayOrObject)(args),\n      observables = _a.args,\n      keys = _a.keys;\n  if (observables.length === 0) {\n    return (0, _from.from)([], scheduler);\n  }\n  var result = new _Observable.Observable(combineLatestInit(observables, scheduler, keys ? function (values) {\n    return (0, _createObject.createObject)(keys, values);\n  } : _identity.identity));\n  return resultSelector ? result.pipe((0, _mapOneOrManyArgs.mapOneOrManyArgs)(resultSelector)) : result;\n}\nfunction combineLatestInit(observables, scheduler, valueTransform) {\n  if (valueTransform === void 0) {\n    valueTransform = _identity.identity;\n  }\n  return function (subscriber) {\n    maybeSchedule(scheduler, function () {\n      var length = observables.length;\n      var values = new Array(length);\n      var active = length;\n      var remainingFirstValues = length;\n      var _loop_1 = function (i) {\n        maybeSchedule(scheduler, function () {\n          var source = (0, _from.from)(observables[i], scheduler);\n          var hasFirstValue = false;\n          source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {\n            values[i] = value;\n            if (!hasFirstValue) {\n              hasFirstValue = true;\n              remainingFirstValues--;\n            }\n            if (!remainingFirstValues) {\n              subscriber.next(valueTransform(values.slice()));\n            }\n          }, function () {\n            if (! --active) {\n              subscriber.complete();\n            }\n          }));\n        }, subscriber);\n      };\n      for (var i = 0; i < length; i++) {\n        _loop_1(i);\n      }\n    }, subscriber);\n  };\n}\nfunction maybeSchedule(scheduler, execute, subscription) {\n  if (scheduler) {\n    (0, _executeSchedule.executeSchedule)(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}\n//# sourceMappingURL=combineLatest.js.map"},"hash":"a2ef2ae54987a20bf6b63faeb5c6bd49"}