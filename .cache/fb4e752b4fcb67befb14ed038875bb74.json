{"dependencies":[{"name":"../Observable","loc":{"line":1,"column":27}},{"name":"../scheduler/async","loc":{"line":2,"column":40}},{"name":"../util/isScheduler","loc":{"line":3,"column":28}},{"name":"../util/isDate","loc":{"line":4,"column":28}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.timer = timer;\n\nvar _Observable = require(\"../Observable\");\n\nvar _async = require(\"../scheduler/async\");\n\nvar _isScheduler = require(\"../util/isScheduler\");\n\nvar _isDate = require(\"../util/isDate\");\n\nfunction timer(dueTime, intervalOrScheduler, scheduler) {\n  if (dueTime === void 0) {\n    dueTime = 0;\n  }\n  if (scheduler === void 0) {\n    scheduler = _async.async;\n  }\n  var intervalDuration = -1;\n  if (intervalOrScheduler != null) {\n    if ((0, _isScheduler.isScheduler)(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n  return new _Observable.Observable(function (subscriber) {\n    var due = (0, _isDate.isValidDate)(dueTime) ? +dueTime - scheduler.now() : dueTime;\n    if (due < 0) {\n      due = 0;\n    }\n    var n = 0;\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        subscriber.next(n++);\n        if (0 <= intervalDuration) {\n          this.schedule(undefined, intervalDuration);\n        } else {\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n//# sourceMappingURL=timer.js.map"},"hash":"08d93add6c8d88582ff4b2789755315f"}