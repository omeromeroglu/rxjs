{"dependencies":[{"name":"./isFunction","loc":{"line":1,"column":27}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasLift = hasLift;\nexports.operate = operate;\n\nvar _isFunction = require(\"./isFunction\");\n\nfunction hasLift(source) {\n  return (0, _isFunction.isFunction)(source === null || source === void 0 ? void 0 : source.lift);\n}\nfunction operate(init) {\n  return function (source) {\n    if (hasLift(source)) {\n      return source.lift(function (liftedSource) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n//# sourceMappingURL=lift.js.map"},"hash":"cd799da4d4db9f3dba47e131a786bf2b"}