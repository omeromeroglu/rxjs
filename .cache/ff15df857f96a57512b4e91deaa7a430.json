{"dependencies":[{"name":"../util/lift","loc":{"line":1,"column":24}},{"name":"./OperatorSubscriber","loc":{"line":2,"column":41}},{"name":"../util/identity","loc":{"line":3,"column":25}},{"name":"../observable/timer","loc":{"line":4,"column":22}},{"name":"../observable/innerFrom","loc":{"line":5,"column":26}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.retry = retry;\n\nvar _lift = require(\"../util/lift\");\n\nvar _OperatorSubscriber = require(\"./OperatorSubscriber\");\n\nvar _identity = require(\"../util/identity\");\n\nvar _timer = require(\"../observable/timer\");\n\nvar _innerFrom = require(\"../observable/innerFrom\");\n\nfunction retry(configOrCount) {\n  if (configOrCount === void 0) {\n    configOrCount = Infinity;\n  }\n  var config;\n  if (configOrCount && typeof configOrCount === 'object') {\n    config = configOrCount;\n  } else {\n    config = {\n      count: configOrCount\n    };\n  }\n  var _a = config.count,\n      count = _a === void 0 ? Infinity : _a,\n      delay = config.delay,\n      _b = config.resetOnSuccess,\n      resetOnSuccess = _b === void 0 ? false : _b;\n  return count <= 0 ? _identity.identity : (0, _lift.operate)(function (source, subscriber) {\n    var soFar = 0;\n    var innerSub;\n    var subscribeForRetry = function () {\n      var syncUnsub = false;\n      innerSub = source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {\n        if (resetOnSuccess) {\n          soFar = 0;\n        }\n        subscriber.next(value);\n      }, undefined, function (err) {\n        if (soFar++ < count) {\n          var resub_1 = function () {\n            if (innerSub) {\n              innerSub.unsubscribe();\n              innerSub = null;\n              subscribeForRetry();\n            } else {\n              syncUnsub = true;\n            }\n          };\n          if (delay != null) {\n            var notifier = typeof delay === 'number' ? (0, _timer.timer)(delay) : (0, _innerFrom.innerFrom)(delay(err, soFar));\n            var notifierSubscriber_1 = (0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function () {\n              notifierSubscriber_1.unsubscribe();\n              resub_1();\n            }, function () {\n              subscriber.complete();\n            });\n            notifier.subscribe(notifierSubscriber_1);\n          } else {\n            resub_1();\n          }\n        } else {\n          subscriber.error(err);\n        }\n      }));\n      if (syncUnsub) {\n        innerSub.unsubscribe();\n        innerSub = null;\n        subscribeForRetry();\n      }\n    };\n    subscribeForRetry();\n  });\n}\n//# sourceMappingURL=retry.js.map"},"hash":"ae819dc80d6e40fffe373c329a3ed96a"}