{"dependencies":[{"name":"./scheduleObservable","loc":{"line":1,"column":35}},{"name":"./schedulePromise","loc":{"line":2,"column":32}},{"name":"./scheduleArray","loc":{"line":3,"column":30}},{"name":"./scheduleIterable","loc":{"line":4,"column":33}},{"name":"./scheduleAsyncIterable","loc":{"line":5,"column":38}},{"name":"../util/isInteropObservable","loc":{"line":6,"column":36}},{"name":"../util/isPromise","loc":{"line":7,"column":26}},{"name":"../util/isArrayLike","loc":{"line":8,"column":28}},{"name":"../util/isIterable","loc":{"line":9,"column":27}},{"name":"../util/isAsyncIterable","loc":{"line":10,"column":32}},{"name":"../util/throwUnobservableError","loc":{"line":11,"column":49}},{"name":"../util/isReadableStreamLike","loc":{"line":12,"column":37}},{"name":"./scheduleReadableStreamLike","loc":{"line":13,"column":43}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scheduled = scheduled;\n\nvar _scheduleObservable = require(\"./scheduleObservable\");\n\nvar _schedulePromise = require(\"./schedulePromise\");\n\nvar _scheduleArray = require(\"./scheduleArray\");\n\nvar _scheduleIterable = require(\"./scheduleIterable\");\n\nvar _scheduleAsyncIterable = require(\"./scheduleAsyncIterable\");\n\nvar _isInteropObservable = require(\"../util/isInteropObservable\");\n\nvar _isPromise = require(\"../util/isPromise\");\n\nvar _isArrayLike = require(\"../util/isArrayLike\");\n\nvar _isIterable = require(\"../util/isIterable\");\n\nvar _isAsyncIterable = require(\"../util/isAsyncIterable\");\n\nvar _throwUnobservableError = require(\"../util/throwUnobservableError\");\n\nvar _isReadableStreamLike = require(\"../util/isReadableStreamLike\");\n\nvar _scheduleReadableStreamLike = require(\"./scheduleReadableStreamLike\");\n\nfunction scheduled(input, scheduler) {\n  if (input != null) {\n    if ((0, _isInteropObservable.isInteropObservable)(input)) {\n      return (0, _scheduleObservable.scheduleObservable)(input, scheduler);\n    }\n    if ((0, _isArrayLike.isArrayLike)(input)) {\n      return (0, _scheduleArray.scheduleArray)(input, scheduler);\n    }\n    if ((0, _isPromise.isPromise)(input)) {\n      return (0, _schedulePromise.schedulePromise)(input, scheduler);\n    }\n    if ((0, _isAsyncIterable.isAsyncIterable)(input)) {\n      return (0, _scheduleAsyncIterable.scheduleAsyncIterable)(input, scheduler);\n    }\n    if ((0, _isIterable.isIterable)(input)) {\n      return (0, _scheduleIterable.scheduleIterable)(input, scheduler);\n    }\n    if ((0, _isReadableStreamLike.isReadableStreamLike)(input)) {\n      return (0, _scheduleReadableStreamLike.scheduleReadableStreamLike)(input, scheduler);\n    }\n  }\n  throw (0, _throwUnobservableError.createInvalidObservableTypeError)(input);\n}\n//# sourceMappingURL=scheduled.js.map"},"hash":"54f96f60964d36dcbb3ab5948337cec9"}