{"dependencies":[{"name":"tslib","loc":{"line":1,"column":38}},{"name":"../util/isScheduler","loc":{"line":2,"column":28}},{"name":"../Observable","loc":{"line":3,"column":27}},{"name":"../operators/subscribeOn","loc":{"line":4,"column":28}},{"name":"../util/mapOneOrManyArgs","loc":{"line":5,"column":33}},{"name":"../operators/observeOn","loc":{"line":6,"column":26}},{"name":"../AsyncSubject","loc":{"line":7,"column":29}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bindCallbackInternals = bindCallbackInternals;\n\nvar _tslib = require(\"tslib\");\n\nvar _isScheduler = require(\"../util/isScheduler\");\n\nvar _Observable = require(\"../Observable\");\n\nvar _subscribeOn = require(\"../operators/subscribeOn\");\n\nvar _mapOneOrManyArgs = require(\"../util/mapOneOrManyArgs\");\n\nvar _observeOn = require(\"../operators/observeOn\");\n\nvar _AsyncSubject = require(\"../AsyncSubject\");\n\nfunction bindCallbackInternals(isNodeStyle, callbackFunc, resultSelector, scheduler) {\n  if (resultSelector) {\n    if ((0, _isScheduler.isScheduler)(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        return bindCallbackInternals(isNodeStyle, callbackFunc, scheduler).apply(this, args).pipe((0, _mapOneOrManyArgs.mapOneOrManyArgs)(resultSelector));\n      };\n    }\n  }\n  if (scheduler) {\n    return function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return bindCallbackInternals(isNodeStyle, callbackFunc).apply(this, args).pipe((0, _subscribeOn.subscribeOn)(scheduler), (0, _observeOn.observeOn)(scheduler));\n    };\n  }\n  return function () {\n    var _this = this;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    var subject = new _AsyncSubject.AsyncSubject();\n    var uninitialized = true;\n    return new _Observable.Observable(function (subscriber) {\n      var subs = subject.subscribe(subscriber);\n      if (uninitialized) {\n        uninitialized = false;\n        var isAsync_1 = false;\n        var isComplete_1 = false;\n        callbackFunc.apply(_this, (0, _tslib.__spreadArray)((0, _tslib.__spreadArray)([], (0, _tslib.__read)(args)), [function () {\n          var results = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            results[_i] = arguments[_i];\n          }\n          if (isNodeStyle) {\n            var err = results.shift();\n            if (err != null) {\n              subject.error(err);\n              return;\n            }\n          }\n          subject.next(1 < results.length ? results : results[0]);\n          isComplete_1 = true;\n          if (isAsync_1) {\n            subject.complete();\n          }\n        }]));\n        if (isComplete_1) {\n          subject.complete();\n        }\n        isAsync_1 = true;\n      }\n      return subs;\n    });\n  };\n}\n//# sourceMappingURL=bindCallbackInternals.js.map"},"hash":"66de37b2f2e7a7709cf1fb676740db33"}