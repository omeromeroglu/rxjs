{"dependencies":[{"name":"tslib","loc":{"line":1,"column":25}},{"name":"../Subscription","loc":{"line":2,"column":29}},{"name":"../util/lift","loc":{"line":3,"column":24}},{"name":"../observable/innerFrom","loc":{"line":4,"column":26}},{"name":"./OperatorSubscriber","loc":{"line":5,"column":41}},{"name":"../util/noop","loc":{"line":6,"column":21}},{"name":"../util/arrRemove","loc":{"line":7,"column":26}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bufferToggle = bufferToggle;\n\nvar _tslib = require(\"tslib\");\n\nvar _Subscription = require(\"../Subscription\");\n\nvar _lift = require(\"../util/lift\");\n\nvar _innerFrom = require(\"../observable/innerFrom\");\n\nvar _OperatorSubscriber = require(\"./OperatorSubscriber\");\n\nvar _noop = require(\"../util/noop\");\n\nvar _arrRemove = require(\"../util/arrRemove\");\n\nfunction bufferToggle(openings, closingSelector) {\n  return (0, _lift.operate)(function (source, subscriber) {\n    var buffers = [];\n    (0, _innerFrom.innerFrom)(openings).subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (openValue) {\n      var buffer = [];\n      buffers.push(buffer);\n      var closingSubscription = new _Subscription.Subscription();\n      var emitBuffer = function () {\n        (0, _arrRemove.arrRemove)(buffers, buffer);\n        subscriber.next(buffer);\n        closingSubscription.unsubscribe();\n      };\n      closingSubscription.add((0, _innerFrom.innerFrom)(closingSelector(openValue)).subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, emitBuffer, _noop.noop)));\n    }, _noop.noop));\n    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {\n      var e_1, _a;\n      try {\n        for (var buffers_1 = (0, _tslib.__values)(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {\n          var buffer = buffers_1_1.value;\n          buffer.push(value);\n        }\n      } catch (e_1_1) {\n        e_1 = { error: e_1_1 };\n      } finally {\n        try {\n          if (buffers_1_1 && !buffers_1_1.done && (_a = buffers_1.return)) _a.call(buffers_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }, function () {\n      while (buffers.length > 0) {\n        subscriber.next(buffers.shift());\n      }\n      subscriber.complete();\n    }));\n  });\n}\n//# sourceMappingURL=bufferToggle.js.map"},"hash":"a3058eb5e6b441f3fc44ab2795cca398"}