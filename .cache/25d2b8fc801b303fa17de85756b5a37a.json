{"dependencies":[{"name":"../observable/empty","loc":{"line":1,"column":22}},{"name":"../util/lift","loc":{"line":2,"column":24}},{"name":"./OperatorSubscriber","loc":{"line":3,"column":41}},{"name":"../observable/innerFrom","loc":{"line":4,"column":26}},{"name":"../observable/timer","loc":{"line":5,"column":22}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.repeat = repeat;\n\nvar _empty = require(\"../observable/empty\");\n\nvar _lift = require(\"../util/lift\");\n\nvar _OperatorSubscriber = require(\"./OperatorSubscriber\");\n\nvar _innerFrom = require(\"../observable/innerFrom\");\n\nvar _timer = require(\"../observable/timer\");\n\nfunction repeat(countOrConfig) {\n  var _a;\n  var count = Infinity;\n  var delay;\n  if (countOrConfig != null) {\n    if (typeof countOrConfig === 'object') {\n      _a = countOrConfig.count, count = _a === void 0 ? Infinity : _a, delay = countOrConfig.delay;\n    } else {\n      count = countOrConfig;\n    }\n  }\n  return count <= 0 ? function () {\n    return _empty.EMPTY;\n  } : (0, _lift.operate)(function (source, subscriber) {\n    var soFar = 0;\n    var sourceSub;\n    var resubscribe = function () {\n      sourceSub === null || sourceSub === void 0 ? void 0 : sourceSub.unsubscribe();\n      sourceSub = null;\n      if (delay != null) {\n        var notifier = typeof delay === 'number' ? (0, _timer.timer)(delay) : (0, _innerFrom.innerFrom)(delay(soFar));\n        var notifierSubscriber_1 = (0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function () {\n          notifierSubscriber_1.unsubscribe();\n          subscribeToSource();\n        });\n        notifier.subscribe(notifierSubscriber_1);\n      } else {\n        subscribeToSource();\n      }\n    };\n    var subscribeToSource = function () {\n      var syncUnsub = false;\n      sourceSub = source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, undefined, function () {\n        if (++soFar < count) {\n          if (sourceSub) {\n            resubscribe();\n          } else {\n            syncUnsub = true;\n          }\n        } else {\n          subscriber.complete();\n        }\n      }));\n      if (syncUnsub) {\n        resubscribe();\n      }\n    };\n    subscribeToSource();\n  });\n}\n//# sourceMappingURL=repeat.js.map"},"hash":"350ec5ff32c02b498f0023bd886c5191"}