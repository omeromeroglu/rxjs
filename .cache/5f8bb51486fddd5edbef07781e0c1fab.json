{"dependencies":[{"name":"tslib","loc":{"line":1,"column":26}},{"name":"./Subject","loc":{"line":2,"column":24}},{"name":"./scheduler/dateTimestampProvider","loc":{"line":3,"column":38}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReplaySubject = undefined;\n\nvar _tslib = require(\"tslib\");\n\nvar _Subject = require(\"./Subject\");\n\nvar _dateTimestampProvider = require(\"./scheduler/dateTimestampProvider\");\n\nvar ReplaySubject = function (_super) {\n  (0, _tslib.__extends)(ReplaySubject, _super);\n  function ReplaySubject(_bufferSize, _windowTime, _timestampProvider) {\n    if (_bufferSize === void 0) {\n      _bufferSize = Infinity;\n    }\n    if (_windowTime === void 0) {\n      _windowTime = Infinity;\n    }\n    if (_timestampProvider === void 0) {\n      _timestampProvider = _dateTimestampProvider.dateTimestampProvider;\n    }\n    var _this = _super.call(this) || this;\n    _this._bufferSize = _bufferSize;\n    _this._windowTime = _windowTime;\n    _this._timestampProvider = _timestampProvider;\n    _this._buffer = [];\n    _this._infiniteTimeWindow = true;\n    _this._infiniteTimeWindow = _windowTime === Infinity;\n    _this._bufferSize = Math.max(1, _bufferSize);\n    _this._windowTime = Math.max(1, _windowTime);\n    return _this;\n  }\n  ReplaySubject.prototype.next = function (value) {\n    var _a = this,\n        isStopped = _a.isStopped,\n        _buffer = _a._buffer,\n        _infiniteTimeWindow = _a._infiniteTimeWindow,\n        _timestampProvider = _a._timestampProvider,\n        _windowTime = _a._windowTime;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    _super.prototype.next.call(this, value);\n  };\n  ReplaySubject.prototype._subscribe = function (subscriber) {\n    this._throwIfClosed();\n    this._trimBuffer();\n    var subscription = this._innerSubscribe(subscriber);\n    var _a = this,\n        _infiniteTimeWindow = _a._infiniteTimeWindow,\n        _buffer = _a._buffer;\n    var copy = _buffer.slice();\n    for (var i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i]);\n    }\n    this._checkFinalizedStatuses(subscriber);\n    return subscription;\n  };\n  ReplaySubject.prototype._trimBuffer = function () {\n    var _a = this,\n        _bufferSize = _a._bufferSize,\n        _timestampProvider = _a._timestampProvider,\n        _buffer = _a._buffer,\n        _infiniteTimeWindow = _a._infiniteTimeWindow;\n    var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n    if (!_infiniteTimeWindow) {\n      var now = _timestampProvider.now();\n      var last = 0;\n      for (var i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  };\n  return ReplaySubject;\n}(_Subject.Subject);\nexports.ReplaySubject = ReplaySubject;\n//# sourceMappingURL=ReplaySubject.js.map"},"hash":"56b7309fb0bc2ce999a7d730a23494b9"}