{"dependencies":[{"name":"./Subscriber","loc":{"line":1,"column":43}},{"name":"./Subscription","loc":{"line":2,"column":31}},{"name":"./symbol/observable","loc":{"line":3,"column":48}},{"name":"./util/pipe","loc":{"line":4,"column":30}},{"name":"./config","loc":{"line":5,"column":23}},{"name":"./util/isFunction","loc":{"line":6,"column":27}},{"name":"./util/errorContext","loc":{"line":7,"column":29}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Observable = undefined;\n\nvar _Subscriber = require(\"./Subscriber\");\n\nvar _Subscription = require(\"./Subscription\");\n\nvar _observable = require(\"./symbol/observable\");\n\nvar _pipe = require(\"./util/pipe\");\n\nvar _config = require(\"./config\");\n\nvar _isFunction = require(\"./util/isFunction\");\n\nvar _errorContext = require(\"./util/errorContext\");\n\nvar Observable = function () {\n  function Observable(subscribe) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n  Observable.prototype.lift = function (operator) {\n    var observable = new Observable();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  };\n  Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n    var _this = this;\n    var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new _Subscriber.SafeSubscriber(observerOrNext, error, complete);\n    (0, _errorContext.errorContext)(function () {\n      var _a = _this,\n          operator = _a.operator,\n          source = _a.source;\n      subscriber.add(operator ? operator.call(subscriber, source) : source ? _this._subscribe(subscriber) : _this._trySubscribe(subscriber));\n    });\n    return subscriber;\n  };\n  Observable.prototype._trySubscribe = function (sink) {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.error(err);\n    }\n  };\n  Observable.prototype.forEach = function (next, promiseCtor) {\n    var _this = this;\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor(function (resolve, reject) {\n      var subscriber = new _Subscriber.SafeSubscriber({\n        next: function (value) {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n      _this.subscribe(subscriber);\n    });\n  };\n  Observable.prototype._subscribe = function (subscriber) {\n    var _a;\n    return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n  };\n  Observable.prototype[_observable.observable] = function () {\n    return this;\n  };\n  Observable.prototype.pipe = function () {\n    var operations = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      operations[_i] = arguments[_i];\n    }\n    return (0, _pipe.pipeFromArray)(operations)(this);\n  };\n  Observable.prototype.toPromise = function (promiseCtor) {\n    var _this = this;\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor(function (resolve, reject) {\n      var value;\n      _this.subscribe(function (x) {\n        return value = x;\n      }, function (err) {\n        return reject(err);\n      }, function () {\n        return resolve(value);\n      });\n    });\n  };\n  Observable.create = function (subscribe) {\n    return new Observable(subscribe);\n  };\n  return Observable;\n}();\nexports.Observable = Observable;\n\nfunction getPromiseCtor(promiseCtor) {\n  var _a;\n  return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : _config.config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n  return value && (0, _isFunction.isFunction)(value.next) && (0, _isFunction.isFunction)(value.error) && (0, _isFunction.isFunction)(value.complete);\n}\nfunction isSubscriber(value) {\n  return value && value instanceof _Subscriber.Subscriber || isObserver(value) && (0, _Subscription.isSubscription)(value);\n}\n//# sourceMappingURL=Observable.js.map"},"hash":"60ef1832ef8ce02637f3737339fbd71c"}