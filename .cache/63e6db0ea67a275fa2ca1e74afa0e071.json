{"dependencies":[{"name":"tslib","loc":{"line":1,"column":26}},{"name":"../Observable","loc":{"line":2,"column":27}},{"name":"../Subscription","loc":{"line":3,"column":29}},{"name":"../operators/refCount","loc":{"line":4,"column":48}},{"name":"../operators/OperatorSubscriber","loc":{"line":5,"column":41}},{"name":"../util/lift","loc":{"line":6,"column":24}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConnectableObservable = undefined;\n\nvar _tslib = require(\"tslib\");\n\nvar _Observable = require(\"../Observable\");\n\nvar _Subscription = require(\"../Subscription\");\n\nvar _refCount = require(\"../operators/refCount\");\n\nvar _OperatorSubscriber = require(\"../operators/OperatorSubscriber\");\n\nvar _lift = require(\"../util/lift\");\n\nvar ConnectableObservable = function (_super) {\n  (0, _tslib.__extends)(ConnectableObservable, _super);\n  function ConnectableObservable(source, subjectFactory) {\n    var _this = _super.call(this) || this;\n    _this.source = source;\n    _this.subjectFactory = subjectFactory;\n    _this._subject = null;\n    _this._refCount = 0;\n    _this._connection = null;\n    if ((0, _lift.hasLift)(source)) {\n      _this.lift = source.lift;\n    }\n    return _this;\n  }\n  ConnectableObservable.prototype._subscribe = function (subscriber) {\n    return this.getSubject().subscribe(subscriber);\n  };\n  ConnectableObservable.prototype.getSubject = function () {\n    var subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  };\n  ConnectableObservable.prototype._teardown = function () {\n    this._refCount = 0;\n    var _connection = this._connection;\n    this._subject = this._connection = null;\n    _connection === null || _connection === void 0 ? void 0 : _connection.unsubscribe();\n  };\n  ConnectableObservable.prototype.connect = function () {\n    var _this = this;\n    var connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new _Subscription.Subscription();\n      var subject_1 = this.getSubject();\n      connection.add(this.source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subject_1, undefined, function () {\n        _this._teardown();\n        subject_1.complete();\n      }, function (err) {\n        _this._teardown();\n        subject_1.error(err);\n      }, function () {\n        return _this._teardown();\n      })));\n      if (connection.closed) {\n        this._connection = null;\n        connection = _Subscription.Subscription.EMPTY;\n      }\n    }\n    return connection;\n  };\n  ConnectableObservable.prototype.refCount = function () {\n    return (0, _refCount.refCount)()(this);\n  };\n  return ConnectableObservable;\n}(_Observable.Observable);\nexports.ConnectableObservable = ConnectableObservable;\n//# sourceMappingURL=ConnectableObservable.js.map"},"hash":"2a6d2b0cb9757bc5708c2dd928f95301"}