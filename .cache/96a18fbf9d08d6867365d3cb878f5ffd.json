{"dependencies":[{"name":"../scheduler/async","loc":{"line":1,"column":31}},{"name":"../util/lift","loc":{"line":2,"column":24}},{"name":"./OperatorSubscriber","loc":{"line":3,"column":41}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.debounceTime = debounceTime;\n\nvar _async = require(\"../scheduler/async\");\n\nvar _lift = require(\"../util/lift\");\n\nvar _OperatorSubscriber = require(\"./OperatorSubscriber\");\n\nfunction debounceTime(dueTime, scheduler) {\n  if (scheduler === void 0) {\n    scheduler = _async.asyncScheduler;\n  }\n  return (0, _lift.operate)(function (source, subscriber) {\n    var activeTask = null;\n    var lastValue = null;\n    var lastTime = null;\n    var emit = function () {\n      if (activeTask) {\n        activeTask.unsubscribe();\n        activeTask = null;\n        var value = lastValue;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n    function emitWhenIdle() {\n      var targetTime = lastTime + dueTime;\n      var now = scheduler.now();\n      if (now < targetTime) {\n        activeTask = this.schedule(undefined, targetTime - now);\n        subscriber.add(activeTask);\n        return;\n      }\n      emit();\n    }\n    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {\n      lastValue = value;\n      lastTime = scheduler.now();\n      if (!activeTask) {\n        activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n        subscriber.add(activeTask);\n      }\n    }, function () {\n      emit();\n      subscriber.complete();\n    }, undefined, function () {\n      lastValue = activeTask = null;\n    }));\n  });\n}\n//# sourceMappingURL=debounceTime.js.map"},"hash":"89ea91ff786d110fdc949377379d54b5"}